version: "3.8"
services:
  mongo-services:
    container_name: mongo-services
    image: mongo:latest
    restart: on-failure
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password

  mongo-express-services:
    container_name: mongo-express
    image: mongo-express
    restart: always
    depends_on:
      - mongo-services
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongo-services

  postgres:
    image: postgres
    container_name: postgres-services
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: user-services
    volumes:
      - postgres:/var/lib/postgresql/data
  keycloak:
    image: docker.io/bitnami/keycloak:21
    ports:
      - "8011:8080"
    environment:
#      KEYCLOAK_DATABASE_VENDOR: postgres
      KEYCLOAK_DATABASE_HOST: postgres
      KEYCLOAK_CREATE_ADMIN_USER: true
      KEYCLOAK_DATABASE_USER: user
      KEYCLOAK_DATABASE_PASSWORD: password
      KEYCLOAK_DATABASE_NAME: user-services
    depends_on:
      - postgres
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: nguyenkhoi.3182k1@gmail.com
      PGADMIN_DEFAULT_PASSWORD: password
#    volumes:
#      - pgadmin-data:/var/lib/pgadmin
  axonserver:
    image: axoniq/axonserver:latest-dev
    hostname: axonserver
    volumes:
      - axonserver-data:/axonserver/data
      - axonserver-events:/axonserver/events
      - axonserver-plugins:/axonserver/plugins
      - axonserver-config:/axonserver/config:ro
    ports:
      - '8024:8024'
      - '8124:8124'
      - '8224:8224'
    networks:
      - axon-demo

volumes:
  postgres:
    driver_opts:
      o: bind
      type: none
      device: ${PWD}/postgres/data
  axonserver-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PWD}/axon/data
  axonserver-events:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PWD}/axon/events
  axonserver-plugins:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PWD}/axon/plugins
  axonserver-config:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PWD}/axon/config

networks:
  axon-demo:
